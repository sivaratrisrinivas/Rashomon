name: Railway Deployment Pipeline

on:
    push:
        branches: [main]
    pull_request:
        branches: [main]

env:
    NODE_VERSION: "20"
    BUN_VERSION: "latest"

jobs:
    test:
        name: Run Tests
        runs-on: ubuntu-latest

        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Setup Bun
              uses: oven-sh/setup-bun@v1
              with:
                  bun-version: ${{ env.BUN_VERSION }}

            - name: Install backend dependencies
              working-directory: ./api
              run: bun install

            - name: Install frontend dependencies
              working-directory: ./app
              run: bun install

            - name: Run backend tests
              working-directory: ./api
              run: bun test
              env:
                  SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
                  SUPABASE_SERVICE_ROLE_KEY: ${{ secrets.SUPABASE_SERVICE_ROLE_KEY }}
                  GOOGLE_CLOUD_VISION_API_KEY: ${{ secrets.GOOGLE_CLOUD_VISION_API_KEY }}

            - name: Run frontend unit tests
              working-directory: ./app
              run: bun test
              env:
                  NEXT_PUBLIC_SUPABASE_URL: ${{ secrets.NEXT_PUBLIC_SUPABASE_URL }}
                  NEXT_PUBLIC_SUPABASE_ANON_KEY: ${{ secrets.NEXT_PUBLIC_SUPABASE_ANON_KEY }}
                  NEXT_PUBLIC_API_URL: ${{ secrets.NEXT_PUBLIC_API_URL }}

            - name: Run E2E tests
              working-directory: ./app
              run: bunx cypress run
              env:
                  NEXT_PUBLIC_SUPABASE_URL: ${{ secrets.NEXT_PUBLIC_SUPABASE_URL }}
                  NEXT_PUBLIC_SUPABASE_ANON_KEY: ${{ secrets.NEXT_PUBLIC_SUPABASE_ANON_KEY }}
                  NEXT_PUBLIC_API_URL: ${{ secrets.NEXT_PUBLIC_API_URL }}

    deploy-staging:
        name: Deploy to Railway Staging
        runs-on: ubuntu-latest
        needs: test
        if: github.event_name == 'pull_request'

        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Setup Bun
              uses: oven-sh/setup-bun@v1
              with:
                  bun-version: ${{ env.BUN_VERSION }}

            - name: Install Railway CLI
              run: |
                  curl -fsSL https://railway.app/install.sh | sh
                  echo "$HOME/.railway/bin" >> $GITHUB_PATH

            - name: Deploy to Railway Staging
              run: |
                  railway login --token ${{ secrets.RAILWAY_TOKEN }}
                  railway up --service backend
                  railway up --service frontend
              env:
                  RAILWAY_PROJECT_ID: ${{ secrets.RAILWAY_PROJECT_ID }}

    deploy-production:
        name: Deploy to Railway Production
        runs-on: ubuntu-latest
        needs: test
        if: github.ref == 'refs/heads/main'

        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Setup Bun
              uses: oven-sh/setup-bun@v1
              with:
                  bun-version: ${{ env.BUN_VERSION }}

            - name: Install Railway CLI
              run: |
                  curl -fsSL https://railway.app/install.sh | sh
                  echo "$HOME/.railway/bin" >> $GITHUB_PATH

            - name: Deploy to Railway Production
              run: |
                  railway login --token ${{ secrets.RAILWAY_TOKEN }}
                  railway up --service backend --detach
                  railway up --service frontend --detach
              env:
                  RAILWAY_PROJECT_ID: ${{ secrets.RAILWAY_PROJECT_ID }}

            - name: Health Check
              run: |
                  echo "Waiting for services to be ready..."
                  sleep 30

                  # Check backend health
                  curl -f ${{ secrets.RAILWAY_BACKEND_URL }}/health || exit 1

                  # Check frontend health
                  curl -f ${{ secrets.RAILWAY_FRONTEND_URL }}/api/health || exit 1

                  echo "✅ All services are healthy!"

    notify:
        name: Notify Deployment Status
        runs-on: ubuntu-latest
        needs: [deploy-staging, deploy-production]
        if: always()

        steps:
            - name: Notify Success
              if: needs.deploy-staging.result == 'success' || needs.deploy-production.result == 'success'
              run: |
                  echo "✅ Deployment successful!"

            - name: Notify Failure
              if: needs.deploy-staging.result == 'failure' || needs.deploy-production.result == 'failure'
              run: |
                  echo "❌ Deployment failed!"
                  exit 1
